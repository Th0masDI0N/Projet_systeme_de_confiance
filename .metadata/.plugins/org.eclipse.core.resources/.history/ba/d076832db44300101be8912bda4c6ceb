package simplePDL2pn;

import java.io.IOException;
import java.util.Collections;
import java.util.Map;

import org.eclipse.emf.common.util.URI;
import org.eclipse.emf.ecore.resource.*;
import org.eclipse.emf.ecore.resource.impl.*;
import org.eclipse.emf.ecore.xmi.impl.XMIResourceFactoryImpl;

import simplepdl.*;
import petriNet.*;

public class SimplePDL2PetriNetMinimal {

    public static void main(String[] args) {
        // Enregistrement des packages EMF
        SimplepdlPackage.eINSTANCE.eClass();
        PetriNetPackage.eINSTANCE.eClass();

        // Enregistrement des extensions de fichier
        Resource.Factory.Registry reg = Resource.Factory.Registry.INSTANCE;
        Map<String, Object> map = reg.getExtensionToFactoryMap();
        map.put("xmi", new XMIResourceFactoryImpl());

        // Chargement du modèle SimplePDL
        ResourceSet resourceSet = new ResourceSetImpl();
        URI inputURI = URI.createFileURI("models/exemple.simplepdl.xmi");
        Resource simplepdlResource = resourceSet.getResource(inputURI, true);
        Process process = (Process) simplepdlResource.getContents().get(0);

        // Création du modèle PetriNet
        PetriNetFactory petriFactory = PetriNetFactory.eINSTANCE;
        petriNet net = petriFactory.createpetriNet();
        net.setName("PN_" + process.getName());

        // Création de noeuds (Node) pour chaque WorkDefinition
        for (ProcessElement element : process.getProcessElements()) {
            if (element instanceof WorkDefinition) {
                WorkDefinition wd = (WorkDefinition) element;

                Node startNode = petriFactory.createNode();
                startNode.setName("start_" + wd.getName());
                net.getPetriNet().add(startNode);

                Node finishNode = petriFactory.createNode();
                finishNode.setName("finish_" + wd.getName());
                net.getPetriNet().add(finishNode);
            }
        }

        // Sauvegarde du modèle PetriNet
        URI outputURI = URI.createFileURI("models/exemple.petrinet.xmi");
        Resource petriNetResource = resourceSet.createResource(outputURI);
        petriNetResource.getContents().add(net);

        try {
            petriNetResource.save(Collections.EMPTY_MAP);
            System.out.println("✅ Modèle PetriNet généré : models/exemple.petrinet.xmi");
        } catch (IOException e) {
            e.printStackTrace();
        }
    }
}
